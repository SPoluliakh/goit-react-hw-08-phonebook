{"version":3,"file":"static/js/361.92569a21.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","Utils/Box.js","components/ChangeContact/ContactForm.styled.js","Redux/contacts/contactsSelectors.js","components/ChangeContact/ChangeContactForm.jsx","components/ChangeContact/ChangeContact.styled.js","components/ChangeContact/ChangeContact.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.style.js","components/AddContactButton/AddContactForm.styled.js","components/AddContactButton/AddContactForm.jsx","components/AddContactButton/AddContactButton.styled.js","components/AddContactButton/AddContactButton.jsx","components/Filter/Filter.jsx","Pages/PhoneBookPage/PhoneBook.styled.js","Pages/PhoneBookPage/PhoneBook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  height: 260px;\n  overflow-y: auto;\n  list-style: none;\n  padding: ${p => p.theme.space[0]}px;\n  margin: ${p => p.theme.space[0]}px;\n`;\n\nexport const TotalContacts = styled.h3`\n  margin: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const ListItemText = styled.p`\n  margin: ${p => p.theme.space[0]}px;\n  margin-right: ${p => p.theme.space[5]}px;\n  font-size: ${p => p.theme.fontSizes.ml}px;\n`;\n\nexport const ListItemBtn = styled.button`\n  justify-content: start;\n  margin-right: ${p => p.theme.space[2]}px;\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 50%;\n  width: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  outline: none;\n  border: none;\n  transition: 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.deletButton};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 20;\n\n  background-color: ${p => p.theme.colors.backdropBackground};\n`;\n\nexport const Inner = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  max-width: 1200px;\n  max-height: auto;\n  background-color: ${p => p.theme.colors.modalBackground};\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: 250ms linear;\n\n  :hover {\n    color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nimport { createPortal } from 'react-dom';\nimport { ImCross } from 'react-icons/im';\nimport * as SC from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ toggleModal, children }) => {\n  useEffect(() => {\n    const coseModal = evt => {\n      if (evt.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', coseModal);\n    document.body.style.overflow = 'hidden';\n    return () => {\n      window.removeEventListener('keydown', coseModal);\n      document.body.style.overflow = '';\n    };\n  }, [toggleModal]);\n\n  const closeOnClick = evt => {\n    if (evt.target === evt.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <SC.Overlay onClick={closeOnClick}>\n      <SC.Inner>\n        {children}\n        <SC.CloseBtn type=\"button\" onClick={toggleModal}>\n          <ImCross size=\"16\" />\n        </SC.CloseBtn>\n      </SC.Inner>\n    </SC.Overlay>,\n\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  toggleModal: PropTypes.func,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\nimport { color, space, layout, flexbox, border, shadow } from 'styled-system';\n\nexport const Box = styled('div')(color, space, layout, flexbox, border, shadow);\n","import styled from 'styled-components';\nimport { Button } from '@mui/material';\n\nexport const ContactFrm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const FormInput = styled.input`\n  margin-top: ${p => p.theme.space[2]}px;\n`;\n\nexport const FormBtn = styled(Button)`\n  min-width: 100px;\n  margin: 0 auto;\n  cursor: pointer;\n  padding: ${p => p.theme.space[1]}px;\n  transition: box-shadow 150ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.buttonsShadow};\n  }\n`;\n","import { createDraftSafeSelector } from '@reduxjs/toolkit';\n\nexport const getContactsState = state => state.contacts;\n\nexport const getContacts = createDraftSafeSelector(\n  getContactsState,\n  state => state.contacts\n);\n","import React, { useState } from 'react';\nimport { Box } from '../../Utils/Box';\nimport {\n  ContactFrm,\n  FormLabel,\n  FormInput,\n  FormBtn,\n} from './ContactForm.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeContact } from 'Redux/contacts/contactsOperations';\nimport { getContacts } from 'Redux/contacts/contactsSelectors';\n\nexport const ChangeContactForm = ({ id, toggleModal }) => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(() => {\n    const { name } = contacts.find(contact => contact.id === id);\n    return name;\n  });\n  const [number, setNumber] = useState(() => {\n    const { number } = contacts.find(contact => contact.id === id);\n    return number;\n  });\n\n  // Responsible for updating the state\n  const handleInputChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return console.warn(`No ${name} options`);\n    }\n  };\n\n  // Called when the form is submitted\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const contactToChange = {\n      name,\n      number,\n      id,\n    };\n\n    dispatch(changeContact(contactToChange));\n    reset();\n    toggleModal();\n  };\n\n  // Reset the form inputs\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box border=\"contactForm\" padding={5} width=\"400px\">\n      <ContactFrm onSubmit={handleSubmit}>\n        <FormLabel>\n          Name\n          <FormInput\n            value={name}\n            onChange={handleInputChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n\n        <FormLabel>\n          Number\n          <FormInput\n            value={number}\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n\n        <FormBtn variant=\"contained\" aria-label=\"add contact\" type=\"submit\">\n          Change contact\n        </FormBtn>\n      </ContactFrm>\n    </Box>\n  );\n};\n\nChangeContactForm.propTypes = {\n  id: PropTypes.string,\n  toggleModal: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { Button } from '@mui/material';\n\nexport const ChangeBtn = styled(Button)`\n  min-width: 60px;\n  transition: box-shadow 150ms linear;\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.buttonsShadow};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\nimport { ChangeContactForm } from './ChangeContactForm';\nimport { FaUserEdit } from 'react-icons/fa';\nimport * as SC from './ChangeContact.styled';\n\nconst ChangeContact = ({ id }) => {\n  const [addContact, setAddContact] = useState(false);\n\n  const toggleModal = () => {\n    setAddContact(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <SC.ChangeBtn type=\"button\" onClick={toggleModal} variant=\"contained\">\n        <FaUserEdit size=\"22px\" />\n      </SC.ChangeBtn>\n      {addContact && (\n        <Modal toggleModal={toggleModal}>\n          <ChangeContactForm id={id} toggleModal={toggleModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ChangeContact;\n\nChangeContact.propTypes = {\n  id: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport * as SC from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'Redux/contacts/contactsOperations';\nimport ChangeContact from 'components/ChangeContact/ChangeContact';\nimport { FcCancel, FcPhoneAndroid } from 'react-icons/fc';\n\nexport const ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <SC.ListItem>\n        <ChangeContact id={id} />\n        <SC.ListItemText>\n          {<FcPhoneAndroid size=\"17px\" />} {name}: {number}\n        </SC.ListItemText>\n        <SC.ListItemBtn\n          variant=\"contained\"\n          type=\"button\"\n          aria-label=\"delete contact\"\n          onClick={() => dispatch(deleteContacts(id))}\n        >\n          {<FcCancel size=\"28px\" />}\n        </SC.ListItemBtn>\n      </SC.ListItem>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n","import React, { useEffect } from 'react';\nimport * as SC from './ContactList.styled';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../Redux/contacts/filterSlice';\nimport * as contactsOperations from '../../Redux/contacts/contactsOperations';\nimport { getContacts } from 'Redux/contacts/contactsSelectors';\n\nexport const ContactList = () => {\n  const contactList = useSelector(getContacts);\n  const filterItem = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  //Responsible for rendering the requested/all contacts\n  const findContactbyName = () => {\n    return contactList.filter(contact =>\n      contact?.name.toLowerCase().includes(filterItem)\n    );\n  };\n\n  return (\n    <>\n      <SC.TotalContacts>\n        Contacts : {findContactbyName().length}\n      </SC.TotalContacts>\n\n      <SC.List>\n        {findContactbyName().map(({ name, number, id }) => (\n          <ContactListItem key={id} name={name} number={number} id={id} />\n        ))}\n      </SC.List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-right: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[0]}px;\n`;\n\nexport const FindArea = styled.input`\n  border: none;\n  outline: none;\n  border-bottom: 1px solid black;\n  background-color: transparent;\n  width: 200px;\n`;\n","import styled from 'styled-components';\nimport { Button } from '@mui/material';\n\nexport const ContactFrm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const FormInput = styled.input`\n  margin-top: ${p => p.theme.space[2]}px;\n`;\n\nexport const FormBtn = styled(Button)`\n  min-width: 100px;\n  margin: 0 auto;\n  cursor: pointer;\n  padding: ${p => p.theme.space[1]}px;\n  transition: box-shadow 150ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.buttonsShadow};\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '../../Utils/Box';\nimport {\n  ContactFrm,\n  FormLabel,\n  FormInput,\n  FormBtn,\n} from './AddContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { postContacts } from 'Redux/contacts/contactsOperations';\nimport { getContacts } from '../../Redux/contacts/contactsSelectors';\n\nexport const AddContactForm = ({ toggleModal }) => {\n  const contactList = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // Responsible for updating the state\n  const handleInputChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return console.warn(`No ${name} options`);\n    }\n  };\n\n  // Called when the form is submitted\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const isInclude = contactList.map(contact => contact.name);\n    if (isInclude.includes(name)) {\n      return alert(`${name} is already in contacts`);\n    }\n    const contactToAdd = {\n      name,\n      number,\n    };\n    dispatch(postContacts(contactToAdd));\n    reset();\n    toggleModal();\n  };\n\n  // Reset the form inputs\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box border=\"contactForm\" padding={5} width=\"400px\">\n      <ContactFrm onSubmit={handleSubmit}>\n        <FormLabel>\n          Name\n          <FormInput\n            value={name}\n            onChange={handleInputChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n\n        <FormLabel>\n          Number\n          <FormInput\n            value={number}\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n\n        <FormBtn variant=\"contained\" aria-label=\"add contact\" type=\"submit\">\n          Add contact\n        </FormBtn>\n      </ContactFrm>\n    </Box>\n  );\n};\n\nAddContactForm.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { Button } from '@mui/material';\n\nexport const AddBtn = styled(Button)`\n  min-width: 60px;\n  transition: box-shadow 150ms linear;\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.buttonsShadow};\n  }\n`;\n","import { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\nimport { AddContactForm } from 'components/AddContactButton/AddContactForm';\nimport { FaUserPlus } from 'react-icons/fa';\nimport * as SC from './AddContactButton.styled';\n\nexport const AddContactButton = () => {\n  const [addContact, setAddContact] = useState(false);\n\n  const toggleModal = () => {\n    setAddContact(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <SC.AddBtn type=\"button\" onClick={toggleModal} variant=\"contained\">\n        <FaUserPlus size=\"22px\" />\n      </SC.AddBtn>\n      {addContact && (\n        <Modal toggleModal={toggleModal}>\n          <AddContactForm toggleModal={toggleModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Box } from 'Utils/Box';\nimport { filterContact, getFilter } from '../../Redux/contacts/filterSlice';\nimport * as SC from './Filter.style';\nimport { AddContactButton } from 'components/AddContactButton/AddContactButton';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Filter = () => {\n  const filterList = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      mb={3}\n    >\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <SC.Title>\n          <FcSearch size=\"24px\" />\n        </SC.Title>\n        <SC.FindArea\n          type=\"text\"\n          name=\"filter\"\n          value={filterList}\n          autoComplete=\"off\"\n          placeholder=\"Name\"\n          onChange={evt => dispatch(filterContact(evt.target.value))}\n        />\n      </Box>\n      <AddContactButton />\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MaineTitle = styled.h1`\n  text-align: center;\n  margin-top: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n","import { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { MaineTitle } from './PhoneBook.styled';\n\nexport const PhoneBookPage = () => {\n  return (\n    <>\n      <MaineTitle>Easy manage your contacts</MaineTitle>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n"],"names":["List","styled","p","theme","space","TotalContacts","ListItem","ListItemText","fontSizes","ml","ListItemBtn","shadows","deletButton","Overlay","colors","backdropBackground","Inner","modalBackground","CloseBtn","modalRoot","document","querySelector","Modal","toggleModal","children","useEffect","coseModal","evt","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","target","currentTarget","type","size","Box","color","layout","flexbox","border","shadow","ContactFrm","FormLabel","FormInput","FormBtn","Button","buttonsShadow","getContacts","createDraftSafeSelector","state","contacts","ChangeContactForm","id","useSelector","dispatch","useDispatch","useState","find","contact","name","setName","number","setNumber","handleInputChange","value","console","warn","reset","padding","width","onSubmit","preventDefault","contactToChange","changeContact","onChange","pattern","title","required","variant","ChangeBtn","addContact","setAddContact","prevState","ContactListItem","deleteContacts","ContactList","contactList","filterItem","getFilter","contactsOperations","findContactbyName","filter","toLowerCase","includes","length","map","Title","FindArea","AddContactForm","alert","contactToAdd","postContacts","AddBtn","AddContactButton","Filter","filterList","display","justifyContent","alignItems","mb","autoComplete","placeholder","filterContact","MaineTitle","PhoneBookPage"],"sourceRoot":""}